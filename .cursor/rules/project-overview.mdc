---
description: 
globs: 
alwaysApply: true
---
# 校园AI智能助手 - 项目总体规则

## 项目元数据
- **项目名称**: 校园AI智能助手 (Campus AI Assistant)
- **课程**: 移动互联网技术及应用
- **类型**: 课程期末大作业
- **平台**: Android
- **开发工具**: Android Studio

## 项目概述

### 核心价值主张
**"智慧校园，AI相伴"** - 打造专属于校园用户的智能化生活助手

### 目标用户
- **主要用户群体**: 在校大学生（18-28岁）
- **次要用户**: 教师和校园工作人员

### 四大核心功能模块
1. **AI对话助手** 🤖 - 基于自然语言处理的智能对话系统
2. **课程管理** 📚 - 全面的个人课程信息管理系统
3. **学习计划** 📝 - AI辅助的个性化学习规划工具
4. **校园信息查询** 🏫 - 校园生活信息的智能聚合平台

## 总体架构设计

### MVP架构模式
采用MVP (Model-View-Presenter) 架构模式：

```
┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐
│      View       │◄──►│   Presenter     │◄──►│     Model       │
│   (Activity/    │    │   (业务逻辑     │    │   (数据层)      │
│   Fragment)     │    │    控制层)      │    │                 │
└─────────────────┘    └─────────────────┘    └─────────────────┘
```

### 各层职责
- **View层**: UI交互处理，被动视图模式
- **Presenter层**: 业务逻辑协调，数据格式化
- **Model层**: 数据存储访问，单一数据源

## 项目目标

### 技术目标
- 构建可维护、可扩展的Android原生应用
- 实现高效的本地数据存储和管理机制
- 集成AI对话API，实现智能自然语言交互
- 确保应用性能稳定，响应迅速

### 业务目标
- 完成四大核心模块的完整功能开发
- 提供完整的用户操作流程和功能体验
- 降低用户学习成本，提高校园生活管理效率

### 质量目标
- 应用启动时间<3秒，页面切换流畅
- 界面响应时间<1秒，操作流程简洁直观
- 崩溃率<1%，无重大Bug

## 开发规范要求
- 严格遵循MVP架构模式
- 使用Android原生开发技术栈
- 采用本地存储方案（SharedPreferences + JSON文件）
- 遵循Material Design设计规范
- 保持代码清晰注释和文档完整性

参考相关规则文件：
- [coding-standards.mdc](mdc:coding-standards.mdc) - 代码开发规范
- [ui-design-rules.mdc](mdc:ui-design-rules.mdc) - UI设计规范
- [feature-modules.mdc](mdc:feature-modules.mdc) - 功能模块设计
